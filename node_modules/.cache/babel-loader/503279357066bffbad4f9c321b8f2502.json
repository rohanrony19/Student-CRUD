{"ast":null,"code":"const $431fbd86ca7dc216$export$b204af158042fbac = el => {\n  var _el_ownerDocument;\n\n  return (_el_ownerDocument = el === null || el === void 0 ? void 0 : el.ownerDocument) !== null && _el_ownerDocument !== void 0 ? _el_ownerDocument : document;\n};\n\nconst $431fbd86ca7dc216$export$f21a1ffae260145a = el => {\n  if (el && 'window' in el && el.window === el) return el;\n  const doc = $431fbd86ca7dc216$export$b204af158042fbac(el);\n  return doc.defaultView || window;\n};\n/**\n * Type guard that checks if a value is a Node. Verifies the presence and type of the nodeType property.\n */\n\n\nfunction $431fbd86ca7dc216$var$isNode(value) {\n  return value !== null && typeof value === 'object' && 'nodeType' in value && typeof value.nodeType === 'number';\n}\n\nfunction $431fbd86ca7dc216$export$af51f0f06c0f328a(node) {\n  return $431fbd86ca7dc216$var$isNode(node) && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && 'host' in node;\n}\n\nexport { $431fbd86ca7dc216$export$b204af158042fbac as getOwnerDocument, $431fbd86ca7dc216$export$f21a1ffae260145a as getOwnerWindow, $431fbd86ca7dc216$export$af51f0f06c0f328a as isShadowRoot };","map":{"version":3,"mappings":"AAAO,MAAMA,4CAAoBC,EAAD,IAAC;MACxBC;;EAAP,OAAO,gEAAIC,aAAJ,MAAiB,IAAjB,uDAAqBC,QAA5B;AACF,CAFO;;AAIA,MAAMC,4CACXJ,EAD4B,IAC5B;EAEA,IAAIA,MAAM,YAAYA,EAAlB,IAAwBA,GAAGK,MAAH,KAAcL,EAA1C,EACE,OAAOA,EAAP;EAGF,MAAMM,MAAMP,0CAAiBC,EAAjB,CAAZ;EACA,OAAOM,IAAIC,WAAJ,IAAmBF,MAA1B;AACF,CATO;AAWP;;;;;AAGA,SAASG,4BAAT,CAAgBC,KAAhB,EAA8B;EAC5B,OAAOA,UAAU,IAAV,IACL,OAAOA,KAAP,KAAiB,QADZ,IAEL,cAAcA,KAFT,IAGL,OAAOA,KAAC,CAAeC,QAAvB,KAAoC,QAHtC;AAIF;;AAKO,SAASC,yCAAT,CAAsBC,IAAtB,EAAuC;EAC5C,OAAOJ,6BAAOI,IAAP,KACLA,KAAKF,QAAL,KAAkBG,KAAKC,sBADlB,IAEL,UAAUF,IAFZ;AAGF","names":["$431fbd86ca7dc216$export$b204af158042fbac","el","_el_ownerDocument","ownerDocument","document","$431fbd86ca7dc216$export$f21a1ffae260145a","window","doc","defaultView","$431fbd86ca7dc216$var$isNode","value","nodeType","$431fbd86ca7dc216$export$af51f0f06c0f328a","node","Node","DOCUMENT_FRAGMENT_NODE"],"sources":["C:\\Users\\rohan\\Downloads\\crud-app-master\\crud-app-master\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\domHelpers.ts"],"sourcesContent":["export const getOwnerDocument = (el: Element | null | undefined): Document => {\n  return el?.ownerDocument ?? document;\n};\n\nexport const getOwnerWindow = (\n  el: (Window & typeof global) | Element | null | undefined\n): Window & typeof global => {\n  if (el && 'window' in el && el.window === el) {\n    return el;\n  }\n\n  const doc = getOwnerDocument(el as Element | null | undefined);\n  return doc.defaultView || window;\n};\n\n/**\n * Type guard that checks if a value is a Node. Verifies the presence and type of the nodeType property.\n */\nfunction isNode(value: unknown): value is Node {\n  return value !== null &&\n    typeof value === 'object' &&\n    'nodeType' in value &&\n    typeof (value as Node).nodeType === 'number';\n}\n/**\n * Type guard that checks if a node is a ShadowRoot. Uses nodeType and host property checks to\n * distinguish ShadowRoot from other DocumentFragments.\n */\nexport function isShadowRoot(node: Node | null): node is ShadowRoot {\n  return isNode(node) &&\n    node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n    'host' in node;\n}\n"]},"metadata":{},"sourceType":"module"}