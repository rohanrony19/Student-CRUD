{"ast":null,"code":"/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $7215afc6de606d6b$export$de79e2c695e052f3(element) {\n  if ($7215afc6de606d6b$var$supportsPreventScroll()) element.focus({\n    preventScroll: true\n  });else {\n    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);\n    element.focus();\n    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);\n  }\n}\n\nlet $7215afc6de606d6b$var$supportsPreventScrollCached = null;\n\nfunction $7215afc6de606d6b$var$supportsPreventScroll() {\n  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {\n    $7215afc6de606d6b$var$supportsPreventScrollCached = false;\n\n    try {\n      let focusElem = document.createElement('div');\n      focusElem.focus({\n        get preventScroll() {\n          $7215afc6de606d6b$var$supportsPreventScrollCached = true;\n          return true;\n        }\n\n      });\n    } catch {// Ignore\n    }\n  }\n\n  return $7215afc6de606d6b$var$supportsPreventScrollCached;\n}\n\nfunction $7215afc6de606d6b$var$getScrollableElements(element) {\n  let parent = element.parentNode;\n  let scrollableElements = [];\n  let rootScrollingElement = document.scrollingElement || document.documentElement;\n\n  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {\n    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) scrollableElements.push({\n      element: parent,\n      scrollTop: parent.scrollTop,\n      scrollLeft: parent.scrollLeft\n    });\n    parent = parent.parentNode;\n  }\n\n  if (rootScrollingElement instanceof HTMLElement) scrollableElements.push({\n    element: rootScrollingElement,\n    scrollTop: rootScrollingElement.scrollTop,\n    scrollLeft: rootScrollingElement.scrollLeft\n  });\n  return scrollableElements;\n}\n\nfunction $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {\n  for (let {\n    element: element,\n    scrollTop: scrollTop,\n    scrollLeft: scrollLeft\n  } of scrollableElements) {\n    element.scrollTop = scrollTop;\n    element.scrollLeft = scrollLeft;\n  }\n}\n\nexport { $7215afc6de606d6b$export$de79e2c695e052f3 as focusWithoutScrolling };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;AA8BO,SAASA,yCAAT,CAA+BC,OAA/B,EAAwD;EAC7D,IAAIC,6CAAJ,EACED,QAAQE,KAAR,CAAc;IAACC,eAAe;EAAhB,CAAd,EADF,KAEO;IACL,IAAIC,qBAAqBC,4CAAsBL,OAAtB,CAAzB;IACAA,QAAQE,KAAR;IACAI,4CAAsBF,kBAAtB;EACF;AACF;;AAEA,IAAIG,oDAA8C,IAAlD;;AACA,SAASN,2CAAT,GAAS;EACP,IAAIM,qDAA+B,IAAnC,EAAyC;IACvCA,oDAA8B,KAA9B;;IACA,IAAI;MACF,IAAIC,YAAYC,SAASC,aAAT,CAAuB,KAAvB,CAAhB;MACAF,UAAUN,KAAV,CAAgB;QACd,IAAIC,aAAJ,GAAoB;UAClBI,oDAA8B,IAA9B;UACA,OAAO,IAAP;QACF;;MAJc,CAAhB;IAMF,CARA,CAQE,MAAM,CACN;IACF;EACF;;EAEA,OAAOA,iDAAP;AACF;;AAEA,SAASF,2CAAT,CAA+BL,OAA/B,EAAwD;EACtD,IAAIW,SAASX,QAAQY,UAArB;EACA,IAAIR,qBAA0C,EAA9C;EACA,IAAIS,uBAAuBJ,SAASK,gBAAT,IAA6BL,SAASM,eAAjE;;EAEA,OAAOJ,kBAAkBK,WAAlB,IAAiCL,WAAWE,oBAAnD,EAAyE;IACvE,IACEF,OAAOM,YAAP,GAAsBN,OAAOO,YAA7B,IACAP,OAAOQ,WAAP,GAAqBR,OAAOS,WAF9B,EAIEhB,mBAAmBiB,IAAnB,CAAwB;MACtBrB,SAASW,MADa;MAEtBW,WAAWX,OAAOW,SAFI;MAGtBC,YAAYZ,OAAOY;IAHG,CAAxB;IAMFZ,SAASA,OAAOC,UAAhB;EACF;;EAEA,IAAIC,gCAAgCG,WAApC,EACEZ,mBAAmBiB,IAAnB,CAAwB;IACtBrB,SAASa,oBADa;IAEtBS,WAAWT,qBAAqBS,SAFV;IAGtBC,YAAYV,qBAAqBU;EAHX,CAAxB;EAOF,OAAOnB,kBAAP;AACF;;AAEA,SAASE,2CAAT,CAA+BF,kBAA/B,EAAsE;EACpE,KAAK,IAAI;IAAAJ,SAACA,OAAD;IAAQsB,WAAEA,SAAV;IAAmBC,YAAEA;EAArB,CAAT,IAA6CnB,kBAA7C,EAAiE;IAC/DJ,QAAQsB,SAAR,GAAoBA,SAApB;IACAtB,QAAQuB,UAAR,GAAqBA,UAArB;EACF;AACF","names":["$7215afc6de606d6b$export$de79e2c695e052f3","element","$7215afc6de606d6b$var$supportsPreventScroll","focus","preventScroll","scrollableElements","$7215afc6de606d6b$var$getScrollableElements","$7215afc6de606d6b$var$restoreScrollPosition","$7215afc6de606d6b$var$supportsPreventScrollCached","focusElem","document","createElement","parent","parentNode","rootScrollingElement","scrollingElement","documentElement","HTMLElement","offsetHeight","scrollHeight","offsetWidth","scrollWidth","push","scrollTop","scrollLeft"],"sources":["C:\\Users\\rohan\\Downloads\\crud-app-master\\crud-app-master\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\focusWithoutScrolling.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\n\n// This is a polyfill for element.focus({preventScroll: true});\n// Currently necessary for Safari and old Edge:\n// https://caniuse.com/#feat=mdn-api_htmlelement_focus_preventscroll_option\n// See https://bugs.webkit.org/show_bug.cgi?id=178583\n//\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/calvellido/focus-options-polyfill\n\ninterface ScrollableElement {\n  element: HTMLElement,\n  scrollTop: number,\n  scrollLeft: number\n}\n\nexport function focusWithoutScrolling(element: FocusableElement): void {\n  if (supportsPreventScroll()) {\n    element.focus({preventScroll: true});\n  } else {\n    let scrollableElements = getScrollableElements(element);\n    element.focus();\n    restoreScrollPosition(scrollableElements);\n  }\n}\n\nlet supportsPreventScrollCached: boolean | null = null;\nfunction supportsPreventScroll() {\n  if (supportsPreventScrollCached == null) {\n    supportsPreventScrollCached = false;\n    try {\n      let focusElem = document.createElement('div');\n      focusElem.focus({\n        get preventScroll() {\n          supportsPreventScrollCached = true;\n          return true;\n        }\n      });\n    } catch {\n      // Ignore\n    }\n  }\n\n  return supportsPreventScrollCached;\n}\n\nfunction getScrollableElements(element: FocusableElement): ScrollableElement[] {\n  let parent = element.parentNode;\n  let scrollableElements: ScrollableElement[] = [];\n  let rootScrollingElement = document.scrollingElement || document.documentElement;\n\n  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {\n    if (\n      parent.offsetHeight < parent.scrollHeight ||\n      parent.offsetWidth < parent.scrollWidth\n    ) {\n      scrollableElements.push({\n        element: parent,\n        scrollTop: parent.scrollTop,\n        scrollLeft: parent.scrollLeft\n      });\n    }\n    parent = parent.parentNode;\n  }\n\n  if (rootScrollingElement instanceof HTMLElement) {\n    scrollableElements.push({\n      element: rootScrollingElement,\n      scrollTop: rootScrollingElement.scrollTop,\n      scrollLeft: rootScrollingElement.scrollLeft\n    });\n  }\n\n  return scrollableElements;\n}\n\nfunction restoreScrollPosition(scrollableElements: ScrollableElement[]) {\n  for (let {element, scrollTop, scrollLeft} of scrollableElements) {\n    element.scrollTop = scrollTop;\n    element.scrollLeft = scrollLeft;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}