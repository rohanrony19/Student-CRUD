{"ast":null,"code":"import { useState as $fuDHA$useState, useEffect as $fuDHA$useEffect } from \"react\";\nimport { useIsSSR as $fuDHA$useIsSSR } from \"@react-aria/ssr\";\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $5df64b3807dc15ee$var$visualViewport = typeof document !== 'undefined' && window.visualViewport;\n\nfunction $5df64b3807dc15ee$export$d699905dd57c73ca() {\n  let isSSR = (0, $fuDHA$useIsSSR)();\n  let [size, setSize] = (0, $fuDHA$useState)(() => isSSR ? {\n    width: 0,\n    height: 0\n  } : $5df64b3807dc15ee$var$getViewportSize());\n  (0, $fuDHA$useEffect)(() => {\n    // Use visualViewport api to track available height even on iOS virtual keyboard opening\n    let onResize = () => {\n      setSize(size => {\n        let newSize = $5df64b3807dc15ee$var$getViewportSize();\n        if (newSize.width === size.width && newSize.height === size.height) return size;\n        return newSize;\n      });\n    };\n\n    if (!$5df64b3807dc15ee$var$visualViewport) window.addEventListener('resize', onResize);else $5df64b3807dc15ee$var$visualViewport.addEventListener('resize', onResize);\n    return () => {\n      if (!$5df64b3807dc15ee$var$visualViewport) window.removeEventListener('resize', onResize);else $5df64b3807dc15ee$var$visualViewport.removeEventListener('resize', onResize);\n    };\n  }, []);\n  return size;\n}\n\nfunction $5df64b3807dc15ee$var$getViewportSize() {\n  return {\n    width: $5df64b3807dc15ee$var$visualViewport && ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.width) || window.innerWidth,\n    height: $5df64b3807dc15ee$var$visualViewport && ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.height) || window.innerHeight\n  };\n}\n\nexport { $5df64b3807dc15ee$export$d699905dd57c73ca as useViewportSize };","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;AAoBA,IAAIA,uCAAiB,OAAOC,QAAP,KAAoB,WAApB,IAAmCC,OAAOC,cAA/D;;AAEO,SAASC,yCAAT,GAAS;EACd,IAAIC,QAAQ,sBAAZ;EACA,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkB,qBAAS,MAAMF,QAAQ;IAACG,OAAO,CAAR;IAAWC,QAAQ;EAAnB,CAAR,GAAgCC,uCAA/C,CAAtB;EAEA,sBAAU;IACR;IACA,IAAIC,WAAW;MACbJ,QAAQD;QACN,IAAIM,UAAUF,uCAAd;QACA,IAAIE,QAAQJ,KAAR,KAAkBF,KAAKE,KAAvB,IAAgCI,QAAQH,MAAR,KAAmBH,KAAKG,MAA5D,EACE,OAAOH,IAAP;QAEF,OAAOM,OAAP;MACF,CANA;IAOF,CARA;;IAUA,IAAI,CAACZ,oCAAL,EACEE,OAAOW,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC,EADF,KAGEX,qCAAea,gBAAf,CAAgC,QAAhC,EAA0CF,QAA1C;IAGF,OAAO;MACL,IAAI,CAACX,oCAAL,EACEE,OAAOY,mBAAP,CAA2B,QAA3B,EAAqCH,QAArC,EADF,KAGEX,qCAAec,mBAAf,CAAmC,QAAnC,EAA6CH,QAA7C;IAEJ,CANA;EAOF,CAzBA,EAyBG,EAzBH;EA2BA,OAAOL,IAAP;AACF;;AAEA,SAASI,qCAAT,GAAS;EACP,OAAO;IACLF,OAAOR,oCAAC,KAAkBA,iJAAgBQ,KAAlC,CAAD,IAA6CN,OAAOa,UADtD;IAELN,QAAQT,oCAAC,KAAkBA,iJAAgBS,MAAlC,CAAD,IAA8CP,OAAOc;EAFxD,CAAP;AAIF","names":["$5df64b3807dc15ee$var$visualViewport","document","window","visualViewport","$5df64b3807dc15ee$export$d699905dd57c73ca","isSSR","size","setSize","width","height","$5df64b3807dc15ee$var$getViewportSize","onResize","newSize","addEventListener","removeEventListener","innerWidth","innerHeight"],"sources":["C:\\Users\\rohan\\Downloads\\crud-app-master\\crud-app-master\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\useViewportSize.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\ninterface ViewportSize {\n  width: number,\n  height: number\n}\n\nlet visualViewport = typeof document !== 'undefined' && window.visualViewport;\n\nexport function useViewportSize(): ViewportSize {\n  let isSSR = useIsSSR();\n  let [size, setSize] = useState(() => isSSR ? {width: 0, height: 0} : getViewportSize());\n\n  useEffect(() => {\n    // Use visualViewport api to track available height even on iOS virtual keyboard opening\n    let onResize = () => {\n      setSize(size => {\n        let newSize = getViewportSize();\n        if (newSize.width === size.width && newSize.height === size.height) {\n          return size;\n        }\n        return newSize;\n      });\n    };\n\n    if (!visualViewport) {\n      window.addEventListener('resize', onResize);\n    } else {\n      visualViewport.addEventListener('resize', onResize);\n    }\n\n    return () => {\n      if (!visualViewport) {\n        window.removeEventListener('resize', onResize);\n      } else {\n        visualViewport.removeEventListener('resize', onResize);\n      }\n    };\n  }, []);\n\n  return size;\n}\n\nfunction getViewportSize(): ViewportSize {\n  return {\n    width: (visualViewport && visualViewport?.width) || window.innerWidth,\n    height: (visualViewport && visualViewport?.height) || window.innerHeight\n  };\n}\n"]},"metadata":{},"sourceType":"module"}