{"ast":null,"code":"import { useLayoutEffect as $6dfIe$useLayoutEffect, useEffectEvent as $6dfIe$useEffectEvent, isFocusable as $6dfIe$isFocusable, getOwnerWindow as $6dfIe$getOwnerWindow, focusWithoutScrolling as $6dfIe$focusWithoutScrolling } from \"@react-aria/utils\";\nimport { useRef as $6dfIe$useRef, useCallback as $6dfIe$useCallback } from \"react\";\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $8a9cb279dc87e130$export$525bc4921d56d4a(nativeEvent) {\n  let event = nativeEvent;\n  event.nativeEvent = nativeEvent;\n\n  event.isDefaultPrevented = () => event.defaultPrevented; // cancelBubble is technically deprecated in the spec, but still supported in all browsers.\n\n\n  event.isPropagationStopped = () => event.cancelBubble;\n\n  event.persist = () => {};\n\n  return event;\n}\n\nfunction $8a9cb279dc87e130$export$c2b7abe5d61ec696(event, target) {\n  Object.defineProperty(event, 'target', {\n    value: target\n  });\n  Object.defineProperty(event, 'currentTarget', {\n    value: target\n  });\n}\n\nfunction $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {\n  let stateRef = (0, $6dfIe$useRef)({\n    isFocused: false,\n    observer: null\n  }); // Clean up MutationObserver on unmount. See below.\n\n  (0, $6dfIe$useLayoutEffect)(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n  let dispatchBlur = (0, $6dfIe$useEffectEvent)(e => {\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  }); // This function is called during a React onFocus event.\n\n  return (0, $6dfIe$useCallback)(e => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {\n      stateRef.current.isFocused = true;\n      let target = e.target;\n\n      let onBlurHandler = e => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          let event = $8a9cb279dc87e130$export$525bc4921d56d4a(e);\n          dispatchBlur(event);\n        } // We no longer need the MutationObserver once the target is blurred.\n\n\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {\n        once: true\n      });\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          var _stateRef_current_observer;\n\n          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();\n          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent('blur', {\n            relatedTarget: relatedTargetEl\n          }));\n          target.dispatchEvent(new FocusEvent('focusout', {\n            bubbles: true,\n            relatedTarget: relatedTargetEl\n          }));\n        }\n      });\n      stateRef.current.observer.observe(target, {\n        attributes: true,\n        attributeFilter: ['disabled']\n      });\n    }\n  }, [dispatchBlur]);\n}\n\nlet $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;\n\nfunction $8a9cb279dc87e130$export$cabe61c495ee3649(target) {\n  // The browser will focus the nearest focusable ancestor of our target.\n  while (target && !(0, $6dfIe$isFocusable)(target)) target = target.parentElement;\n\n  let window = (0, $6dfIe$getOwnerWindow)(target);\n  let activeElement = window.document.activeElement;\n  if (!activeElement || activeElement === target) return;\n  $8a9cb279dc87e130$export$fda7da73ab5d4c48 = true;\n  let isRefocusing = false;\n\n  let onBlur = e => {\n    if (e.target === activeElement || isRefocusing) e.stopImmediatePropagation();\n  };\n\n  let onFocusOut = e => {\n    if (e.target === activeElement || isRefocusing) {\n      e.stopImmediatePropagation(); // If there was no focusable ancestor, we don't expect a focus event.\n      // Re-focus the original active element here.\n\n      if (!target && !isRefocusing) {\n        isRefocusing = true;\n        (0, $6dfIe$focusWithoutScrolling)(activeElement);\n        cleanup();\n      }\n    }\n  };\n\n  let onFocus = e => {\n    if (e.target === target || isRefocusing) e.stopImmediatePropagation();\n  };\n\n  let onFocusIn = e => {\n    if (e.target === target || isRefocusing) {\n      e.stopImmediatePropagation();\n\n      if (!isRefocusing) {\n        isRefocusing = true;\n        (0, $6dfIe$focusWithoutScrolling)(activeElement);\n        cleanup();\n      }\n    }\n  };\n\n  window.addEventListener('blur', onBlur, true);\n  window.addEventListener('focusout', onFocusOut, true);\n  window.addEventListener('focusin', onFocusIn, true);\n  window.addEventListener('focus', onFocus, true);\n\n  let cleanup = () => {\n    cancelAnimationFrame(raf);\n    window.removeEventListener('blur', onBlur, true);\n    window.removeEventListener('focusout', onFocusOut, true);\n    window.removeEventListener('focusin', onFocusIn, true);\n    window.removeEventListener('focus', onFocus, true);\n    $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;\n    isRefocusing = false;\n  };\n\n  let raf = requestAnimationFrame(cleanup);\n  return cleanup;\n}\n\nexport { $8a9cb279dc87e130$export$525bc4921d56d4a as createSyntheticEvent, $8a9cb279dc87e130$export$c2b7abe5d61ec696 as setEventTarget, $8a9cb279dc87e130$export$715c682d09d639cc as useSyntheticBlurEvent, $8a9cb279dc87e130$export$fda7da73ab5d4c48 as ignoreFocusEvent, $8a9cb279dc87e130$export$cabe61c495ee3649 as preventFocus };","map":{"version":3,"mappings":"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","names":["$8a9cb279dc87e130$export$525bc4921d56d4a","nativeEvent","event","isDefaultPrevented","defaultPrevented","isPropagationStopped","cancelBubble","persist","$8a9cb279dc87e130$export$c2b7abe5d61ec696","target","Object","defineProperty","value","$8a9cb279dc87e130$export$715c682d09d639cc","onBlur","stateRef","isFocused","observer","state","current","disconnect","dispatchBlur","e","HTMLButtonElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","onBlurHandler","disabled","addEventListener","once","MutationObserver","_stateRef_current_observer","relatedTargetEl","document","activeElement","dispatchEvent","FocusEvent","relatedTarget","bubbles","observe","attributes","attributeFilter","$8a9cb279dc87e130$export$fda7da73ab5d4c48","$8a9cb279dc87e130$export$cabe61c495ee3649","parentElement","window","isRefocusing","stopImmediatePropagation","onFocusOut","cleanup","onFocus","onFocusIn","cancelAnimationFrame","raf","removeEventListener","requestAnimationFrame"],"sources":["C:\\Users\\rohan\\Downloads\\crud-app-master\\crud-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\utils.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusWithoutScrolling, getOwnerWindow, isFocusable, useEffectEvent, useLayoutEffect} from '@react-aria/utils';\nimport {FocusEvent as ReactFocusEvent, SyntheticEvent, useCallback, useRef} from 'react';\n\n// Turn a native event into a React synthetic event.\nexport function createSyntheticEvent<E extends SyntheticEvent>(nativeEvent: Event): E {\n  let event = nativeEvent as any as E;\n  event.nativeEvent = nativeEvent;\n  event.isDefaultPrevented = () => event.defaultPrevented;\n  // cancelBubble is technically deprecated in the spec, but still supported in all browsers.\n  event.isPropagationStopped = () => (event as any).cancelBubble;\n  event.persist = () => {};\n  return event;\n}\n\nexport function setEventTarget(event: Event, target: Element): void {\n  Object.defineProperty(event, 'target', {value: target});\n  Object.defineProperty(event, 'currentTarget', {value: target});\n}\n\nexport function useSyntheticBlurEvent<Target extends Element = Element>(onBlur: (e: ReactFocusEvent<Target>) => void): (e: ReactFocusEvent<Target>) => void {\n  let stateRef = useRef({\n    isFocused: false,\n    observer: null as MutationObserver | null\n  });\n\n  // Clean up MutationObserver on unmount. See below.\n\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  let dispatchBlur = useEffectEvent((e: ReactFocusEvent<Target>) => {\n    onBlur?.(e);\n  });\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent<Target>) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler: EventListenerOrEventListenerObject | null = (e) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          let event = createSyntheticEvent<ReactFocusEvent<Target>>(e);\n          dispatchBlur(event);\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer?.disconnect();\n          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent('blur', {relatedTarget: relatedTargetEl}));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true, relatedTarget: relatedTargetEl}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, [dispatchBlur]);\n}\n\nexport let ignoreFocusEvent = false;\n\n/**\n * This function prevents the next focus event fired on `target`, without using `event.preventDefault()`.\n * It works by waiting for the series of focus events to occur, and reverts focus back to where it was before.\n * It also makes these events mostly non-observable by using a capturing listener on the window and stopping propagation.\n */\nexport function preventFocus(target: FocusableElement | null): (() => void) | undefined {\n  // The browser will focus the nearest focusable ancestor of our target.\n  while (target && !isFocusable(target)) {\n    target = target.parentElement;\n  }\n\n  let window = getOwnerWindow(target);\n  let activeElement = window.document.activeElement as FocusableElement | null;\n  if (!activeElement || activeElement === target) {\n    return;\n  }\n\n  ignoreFocusEvent = true;\n  let isRefocusing = false;\n  let onBlur = (e: FocusEvent) => {\n    if (e.target === activeElement || isRefocusing) {\n      e.stopImmediatePropagation();\n    }\n  };\n\n  let onFocusOut = (e: FocusEvent) => {\n    if (e.target === activeElement || isRefocusing) {\n      e.stopImmediatePropagation();\n\n      // If there was no focusable ancestor, we don't expect a focus event.\n      // Re-focus the original active element here.\n      if (!target && !isRefocusing) {\n        isRefocusing = true;\n        focusWithoutScrolling(activeElement);\n        cleanup();\n      }\n    }\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    if (e.target === target || isRefocusing) {\n      e.stopImmediatePropagation();\n    }\n  };\n\n  let onFocusIn = (e: FocusEvent) => {\n    if (e.target === target || isRefocusing) {\n      e.stopImmediatePropagation();\n\n      if (!isRefocusing) {\n        isRefocusing = true;\n        focusWithoutScrolling(activeElement);\n        cleanup();\n      }\n    }\n  };\n\n  window.addEventListener('blur', onBlur, true);\n  window.addEventListener('focusout', onFocusOut, true);\n  window.addEventListener('focusin', onFocusIn, true);\n  window.addEventListener('focus', onFocus, true);\n\n  let cleanup = () => {\n    cancelAnimationFrame(raf);\n    window.removeEventListener('blur', onBlur, true);\n    window.removeEventListener('focusout', onFocusOut, true);\n    window.removeEventListener('focusin', onFocusIn, true);\n    window.removeEventListener('focus', onFocus, true);\n    ignoreFocusEvent = false;\n    isRefocusing = false;\n  };\n\n  let raf = requestAnimationFrame(cleanup);\n  return cleanup;\n}\n"]},"metadata":{},"sourceType":"module"}