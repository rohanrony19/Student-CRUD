{"ast":null,"code":"import { PressResponderContext as $ae1eeba8b9eafd08$export$5165eccb35aaadb5 } from \"./context.mjs\";\nimport { useObjectRef as $87RPk$useObjectRef, mergeProps as $87RPk$mergeProps, useSyncRef as $87RPk$useSyncRef } from \"@react-aria/utils\";\nimport $87RPk$react, { useRef as $87RPk$useRef, useContext as $87RPk$useContext, useEffect as $87RPk$useEffect, useMemo as $87RPk$useMemo } from \"react\";\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $f1ab8c75478c6f73$export$3351871ee4b288b8 = /*#__PURE__*/(0, $87RPk$react).forwardRef((_ref, ref) => {\n  let {\n    children: children,\n    ...props\n  } = _ref;\n  let isRegistered = (0, $87RPk$useRef)(false);\n  let prevContext = (0, $87RPk$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  ref = (0, $87RPk$useObjectRef)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));\n  let context = (0, $87RPk$mergeProps)(prevContext || {}, { ...props,\n    ref: ref,\n\n    register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n\n  });\n  (0, $87RPk$useSyncRef)(prevContext, ref);\n  (0, $87RPk$useEffect)(() => {\n    if (!isRegistered.current) {\n      if (process.env.NODE_ENV !== 'production') console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n      isRegistered.current = true; // only warn once in strict mode.\n    }\n  }, []);\n  return /*#__PURE__*/(0, $87RPk$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n});\n\nfunction $f1ab8c75478c6f73$export$cf75428e0b9ed1ea(_ref2) {\n  let {\n    children: children\n  } = _ref2;\n  let context = (0, $87RPk$useMemo)(() => ({\n    register: () => {}\n  }), []);\n  return /*#__PURE__*/(0, $87RPk$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n}\n\nexport { $f1ab8c75478c6f73$export$3351871ee4b288b8 as PressResponder, $f1ab8c75478c6f73$export$cf75428e0b9ed1ea as ClearPressResponder };","map":{"version":3,"mappings":";;;AAAA;;;;;;;;;;;;AAsBO,MAAMA,yDAAiB,kBAAMC,UAAN,CAAiB,OAA4CC,GAA5C,KAA4C;EAAA,IAA3C;IAAAC,UAACA,QAAD;IAAW,GAAGC;EAAd,CAA2C;EACzF,IAAIC,eAAe,mBAAO,KAAP,CAAnB;EACA,IAAIC,cAAc,wBAAW,4CAAX,EAAlB;EACAJ,MAAM,yBAAaA,QAAOI,sEAAaJ,GAApB,CAAb,CAAN;EACA,IAAIK,UAAU,uBAAWD,eAAe,EAA1B,EAA8B,EAC1C,GAAGF,KADuC;SAE1CF,GAF0C;;IAG1CM;MACEH,aAAaI,OAAb,GAAuB,IAAvB;MACA,IAAIH,WAAJ,EACEA,YAAYE,QAAZ;IAEJ;;EAR0C,CAA9B,CAAd;EAWA,uBAAWF,WAAX,EAAwBJ,GAAxB;EAEA,sBAAU;IACR,IAAI,CAACG,aAAaI,OAAlB,EAA2B;MACzB,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EACEC,QAAQC,IAAR,CACE,2IADF;MAKFT,aAAaI,OAAb,GAAuB,IAAvB,CAPyB,CAOI;IAC/B;EACF,CAVA,EAUG,EAVH;EAYA,oBACE,gCAAC,+CAAsBM,QAAvB,EAA+B;IAACC,OAAOT;EAAR,CAA/B,EACGJ,QADH,CADF;AAKF,CAlC8B,CAAvB;;AAoCA,SAASc,yCAAT,QAA8D;EAAA,IAAjC;IAAAd,UAACA;EAAD,CAAiC;EACnE,IAAII,UAAU,oBAAQ,OAAO;IAACC,UAAU,OAAO;EAAlB,CAAP,CAAR,EAAsC,EAAtC,CAAd;EACA,oBACE,gCAAC,+CAAsBO,QAAvB,EAA+B;IAACC,OAAOT;EAAR,CAA/B,EACGJ,QADH,CADF;AAKF","names":["$f1ab8c75478c6f73$export$3351871ee4b288b8","forwardRef","ref","children","props","isRegistered","prevContext","context","register","current","process","env","NODE_ENV","console","warn","Provider","value","$f1ab8c75478c6f73$export$cf75428e0b9ed1ea"],"sources":["C:\\Users\\rohan\\Downloads\\crud-app-master\\crud-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\PressResponder.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useObjectRef, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ForwardedRef, JSX, ReactNode, useContext, useEffect, useMemo, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: ForwardedRef<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  ref = useObjectRef(ref || prevContext?.ref);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          'A PressResponder was rendered without a pressable child. ' +\n          'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n        );\n      }\n      isRegistered.current = true; // only warn once in strict mode.\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n\nexport function ClearPressResponder({children}: {children: ReactNode}): JSX.Element {\n  let context = useMemo(() => ({register: () => {}}), []);\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}