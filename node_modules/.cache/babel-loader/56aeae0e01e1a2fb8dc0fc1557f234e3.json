{"ast":null,"code":"import { useEffect as $Vsl8o$useEffect } from \"react\";\n\nfunction $9daab02d461809db$var$hasResizeObserver() {\n  return typeof window.ResizeObserver !== 'undefined';\n}\n\nfunction $9daab02d461809db$export$683480f191c0e3ea(options) {\n  const {\n    ref: ref,\n    box: box,\n    onResize: onResize\n  } = options;\n  (0, $Vsl8o$useEffect)(() => {\n    let element = ref === null || ref === void 0 ? void 0 : ref.current;\n    if (!element) return;\n\n    if (!$9daab02d461809db$var$hasResizeObserver()) {\n      window.addEventListener('resize', onResize, false);\n      return () => {\n        window.removeEventListener('resize', onResize, false);\n      };\n    } else {\n      const resizeObserverInstance = new window.ResizeObserver(entries => {\n        if (!entries.length) return;\n        onResize();\n      });\n      resizeObserverInstance.observe(element, {\n        box: box\n      });\n      return () => {\n        if (element) resizeObserverInstance.unobserve(element);\n      };\n    }\n  }, [onResize, ref, box]);\n}\n\nexport { $9daab02d461809db$export$683480f191c0e3ea as useResizeObserver };","map":{"version":3,"mappings":";;AAIA,SAASA,uCAAT,GAAS;EACP,OAAO,OAAOC,OAAOC,cAAd,KAAiC,WAAxC;AACF;;AAQO,SAASC,yCAAT,CAA8CC,OAA9C,EAAsF;EAC3F,MAAM;IAAAC,KAACA,GAAD;IAAIC,KAAEA,GAAN;IAASC,UAAEA;EAAX,IAAuBH,OAA7B;EAEA,sBAAU;IACR,IAAII,UAAUH,8CAAKI,OAAnB;IACA,IAAI,CAACD,OAAL,EACE;;IAGF,IAAI,CAACR,yCAAL,EAA0B;MACxBC,OAAOS,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC,EAA4C,KAA5C;MACA,OAAO;QACLN,OAAOU,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC,EAA+C,KAA/C;MACF,CAFA;IAGF,CALA,MAKO;MAEL,MAAMK,yBAAyB,IAAIX,OAAOC,cAAX,CAA2BW,OAAD,IAAC;QACxD,IAAI,CAACA,QAAQC,MAAb,EACE;QAGFP;MACF,CAN+B,CAA/B;MAOAK,uBAAuBG,OAAvB,CAA+BP,OAA/B,EAAwC;aAACF;MAAD,CAAxC;MAEA,OAAO;QACL,IAAIE,OAAJ,EACEI,uBAAuBI,SAAvB,CAAiCR,OAAjC;MAEJ,CAJA;IAKF;EAEF,CA7BA,EA6BG,CAACD,QAAD,EAAWF,GAAX,EAAgBC,GAAhB,CA7BH;AA8BF","names":["$9daab02d461809db$var$hasResizeObserver","window","ResizeObserver","$9daab02d461809db$export$683480f191c0e3ea","options","ref","box","onResize","element","current","addEventListener","removeEventListener","resizeObserverInstance","entries","length","observe","unobserve"],"sources":["C:\\Users\\rohan\\Downloads\\crud-app-master\\crud-app-master\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\useResizeObserver.ts"],"sourcesContent":["\nimport {RefObject} from '@react-types/shared';\nimport {useEffect} from 'react';\n\nfunction hasResizeObserver() {\n  return typeof window.ResizeObserver !== 'undefined';\n}\n\ntype useResizeObserverOptionsType<T> = {\n  ref: RefObject<T | undefined | null> | undefined,\n  box?: ResizeObserverBoxOptions,\n  onResize: () => void\n}\n\nexport function useResizeObserver<T extends Element>(options: useResizeObserverOptionsType<T>): void {\n  const {ref, box, onResize} = options;\n\n  useEffect(() => {\n    let element = ref?.current;\n    if (!element) {\n      return;\n    }\n\n    if (!hasResizeObserver()) {\n      window.addEventListener('resize', onResize, false);\n      return () => {\n        window.removeEventListener('resize', onResize, false);\n      };\n    } else {\n\n      const resizeObserverInstance = new window.ResizeObserver((entries) => {\n        if (!entries.length) {\n          return;\n        }\n\n        onResize();\n      });\n      resizeObserverInstance.observe(element, {box});\n\n      return () => {\n        if (element) {\n          resizeObserverInstance.unobserve(element);\n        }\n      };\n    }\n\n  }, [onResize, ref, box]);\n}\n"]},"metadata":{},"sourceType":"module"}